managed implementation in class ZBP_R_INV_STOCK unique;
strict ( 2 );
with draft;
extensible;
define behavior for ZDR_R_INV_STOCK alias StockInventory
persistent table ZADR_INV_STOCK
extensible
draft table ZDR_D_INV_STOCK
etag master LocalLastChangedAt
lock master total etag LastChangedAt
authorization master( global )

{
  field ( mandatory : create )
   MaterialId,
   PlantId,
   StorageLocation;

  field ( readonly )
   CreatedBy,
   CreatedAt,
   LocalLastChangedBy,
   LocalLastChangedAt,
   LastChangedAt;

  field ( readonly : update )
   MaterialId,
   PlantId,
   StorageLocation;


  create;
  update;
  delete;

  draft action Activate optimized;
  draft action Discard;
  draft action Edit;
  draft action Resume;
  draft determine action Prepare;

  mapping for ZADR_INV_STOCK corresponding extensible
  {
    MaterialId = material_id;
    PlantId = plant_id;
    StorageLocation = storage_location;
    UnitOfMeasure = unit_of_measure;
    CurrentStock = current_stock;
    MinimumStock = minimum_stock;
    MaximumStock = maximum_stock;
    ReorderPoint = reorder_point;
    SafetyStock = safety_stock;
    UnrestrictedStock = unrestricted_stock;
    QualityStock = quality_stock;
    BlockedStock = blocked_stock;
    ReservedStock = reserved_stock;
    InTransitStock = in_transit_stock;
    OpenPrQty = open_pr_qty;
    OpenPoQty = open_po_qty;
    StockType = stock_type;
    LastGoodsReceipt = last_goods_receipt;
    LastGoodsIssue = last_goods_issue;
    LastMovementType = last_movement_type;
    LastMovementDate = last_movement_date;
    Currency = currency;
    StockValue = stock_value;
    CreatedBy = created_by;
    CreatedAt = created_at;
    LocalLastChangedBy = local_last_changed_by;
    LocalLastChangedAt = local_last_changed_at;
    LastChangedAt = last_changed_at;
  }

}